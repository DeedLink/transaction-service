name: Node.js CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Clone or Update transaction-service Repository
      run: |
        if [ ! -d "transaction-service" ]; then
          git clone https://github.com/DeedLink/transaction-service.git transaction-service
        else
          cd transaction-service
          git fetch origin
          git reset --hard origin/main
          cd ..
        fi

    - name: Add .env to transaction-service
      run: |
        echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> transaction-service/.env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> transaction-service/.env
        echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> transaction-service/.env
        echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> transaction-service/.env
        echo "PORT=5004" >> transaction-service/.env

    - name: Run Docker Compose
      run: |
        cd transaction-service
        docker compose pull
        docker compose up -d --remove-orphans

    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/transaction-service:latest ./transaction-service

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/transaction-service:latest

    - name: Deploy via SSH
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /home/ubuntu/deedlink-deployments || mkdir -p /home/ubuntu/deedlink-deployments
          cd /home/ubuntu/deedlink-deployments

          if [ ! -d "transaction-service" ]; then
            git clone https://github.com/DeedLink/transaction-service.git transaction-service
          fi

          cd transaction-service
          git fetch origin
          git reset --hard origin/main

          echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env
          echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env
          echo "PORT=5004" >> .env

          docker compose pull
          docker compose up -d --remove-orphans
